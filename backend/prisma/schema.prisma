// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String     @id @default(cuid())
  firstname    String     @db.VarChar(50)
  lastname     String     @db.VarChar(50)
  email        String     @unique @db.VarChar(100)
  password     String     @db.VarChar(100)
  refreshToken String?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  taskLists    TaskList[]

  @@map("users")
}

model TaskList {
  id        String   @id @default(cuid())
  name      String   @db.VarChar(100)
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  tasks     Task[]

  @@map("task_lists")
}

model Task {
  id               String   @id @default(cuid())
  shortDescription String   @db.VarChar(100)
  longDescription  String?  @db.VarChar(500)
  dueDate          DateTime
  completed        Boolean  @default(false)
  listId           String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  list             TaskList @relation(fields: [listId], references: [id], onDelete: Cascade)

  @@map("tasks")
}
